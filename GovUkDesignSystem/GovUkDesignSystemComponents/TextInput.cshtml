@using GovUkDesignSystem.Helpers
@model GovUkDesignSystem.GovUkDesignSystemComponents.TextInputViewModel

<div class="govuk-form-group @(Model.FormGroup?.Classes) @(Model.ErrorMessage != null ? "govuk-form-group--error" : "")">
    @{
        string describedBy = Model.DescribedBy;
        if (Model.Label != null)
        {
            Model.Label.For = Model.Id;
            await Html.RenderPartialAsync("/GovUkDesignSystemComponents/Label.cshtml", Model.Label);
        }
        if (Model.Hint != null)
        {
            Model.Hint.Id = $"{Model.Id}-hint";
            describedBy += $" {Model.Hint.Id}";
            await Html.RenderPartialAsync("/GovUkDesignSystemComponents/Hint.cshtml", Model.Hint);
        }
        if (Model.ErrorMessage != null)
        {
            Model.ErrorMessage.Id = $"{Model.Id}-error";
            describedBy += $" {Model.ErrorMessage.Id}";
            await Html.RenderPartialAsync("/GovUkDesignSystemComponents/ErrorMessage.cshtml", Model.ErrorMessage);
        }

        var isRequired = string.IsNullOrWhiteSpace(Model.ErrorMessageRequired);
        var dataVal = isRequired ? null : "data-val=\"true\"";
        var dataValRequired = isRequired ? null : $"data-val-required=\"{Model.ErrorMessageRequired} (client-side)\"";
        var required = isRequired ? null : "required";
    }
    <span class="govuk-error-message" data-valmsg-for="@Model.Name" data-valmsg-replace="true" id="@Model.Id-error"><span class="govuk-visually-hidden">Error</span></span>

    <input class="govuk-input @(Model.Classes) @(Model.ErrorMessage != null ? "govuk-input--error" : "")"
           id="@(Model.Id)"
           name="@(Model.Name)"
           type="@(Model.Type ?? "text")"
           value="@(Model.Value)"
           aria-describedby="@(describedBy?.Trim())"
           autocomplete="@(Model.Autocomplete)"
           pattern="@(Model.Pattern)"
           inputmode="@(Model.InputMode)"
           @Html.Raw(dataVal)
           @Html.Raw(dataValRequired)
           @required
           @(Html.Raw(Model.Attributes.ToTagAttributes()))/>

    @if (Model.TextInputAppendix != null)
    {
        await Html.RenderPartialAsync("/GovUkDesignSystemComponents/SubComponents/HtmlText.cshtml", Model.TextInputAppendix);
    }
</div>
